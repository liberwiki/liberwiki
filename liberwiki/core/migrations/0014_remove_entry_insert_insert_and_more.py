# Generated by Django 5.1 on 2025-02-07 07:10

import pgtrigger.compiler
import pgtrigger.migrations
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0013_remove_user_insert_insert_remove_user_update_update_and_more"),
    ]

    operations = [
        pgtrigger.migrations.RemoveTrigger(
            model_name="entry",
            name="insert_insert",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="entry",
            name="update_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="entry",
            name="delete_delete",
        ),
        migrations.AddField(
            model_name="entry",
            name="is_draft",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="entryevent",
            name="is_draft",
            field=models.BooleanField(default=False),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="entry",
            trigger=pgtrigger.compiler.Trigger(
                name="insert_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "core_entryevent" ("author_id", "content", "created_at", "id", "is_draft", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "title_id", "updated_at") VALUES (NEW."author_id", NEW."content", NEW."created_at", NEW."id", NEW."is_draft", _pgh_attach_context(), NOW(), \'insert\', NEW."id", NEW."title_id", NEW."updated_at"); RETURN NULL;',
                    hash="c44b1a6dab6fd232d72db4b348851a0e73523242",
                    operation="INSERT",
                    pgid="pgtrigger_insert_insert_7c1df",
                    table="core_entry",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="entry",
            trigger=pgtrigger.compiler.Trigger(
                name="update_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition="WHEN (OLD.* IS DISTINCT FROM NEW.*)",
                    func='INSERT INTO "core_entryevent" ("author_id", "content", "created_at", "id", "is_draft", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "title_id", "updated_at") VALUES (NEW."author_id", NEW."content", NEW."created_at", NEW."id", NEW."is_draft", _pgh_attach_context(), NOW(), \'update\', NEW."id", NEW."title_id", NEW."updated_at"); RETURN NULL;',
                    hash="cef1bdc920f105b7294bd74b8ba61a81ead52dc3",
                    operation="UPDATE",
                    pgid="pgtrigger_update_update_49bdd",
                    table="core_entry",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="entry",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "core_entryevent" ("author_id", "content", "created_at", "id", "is_draft", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "title_id", "updated_at") VALUES (OLD."author_id", OLD."content", OLD."created_at", OLD."id", OLD."is_draft", _pgh_attach_context(), NOW(), \'delete\', OLD."id", OLD."title_id", OLD."updated_at"); RETURN NULL;',
                    hash="0ed00447a2fe4f392ce46a862cf1df38c83ff505",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_8707a",
                    table="core_entry",
                    when="AFTER",
                ),
            ),
        ),
    ]
